<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	
	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="driverClass" value="${jdbc.driverClass}" ></property>
		<property name="user" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.password}" ></property>
	</bean>
	
	<!-- 配置核心事物管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置织入 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.xh.service.impl.*ServiceImpl.*(..))" id="txPc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
	</aop:config>
	
	<!-- 将hibernate的SessionFactory配置到spring容器中 -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
		<!-- 将连接池注入到sessionFactory中,hibernate会通过连接池获取连接 -->
		<property name="dataSource" ref="dataSource" ></property>
		<!-- 配置hibernate基本属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库连接已经在dataSource中配置完成了 -->
				<prop key="hibernate.dialect" >org.hibernate.dialect.MySQLDialect</prop>
				
				<!-- 配置可选信息 -->
				<prop key="hibernate.show_sql" >true</prop>
				<prop key="hibernate.format_sql" >true</prop>
				<prop key="hibernate.hbm2ddl.auto" >update</prop>
			</props>
		</property>
		<!-- 引入orm元数据,指定元数据所在位置即可,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:com/xh/domain" ></property>
		
	</bean>
	
	<!-- action配置
		scope属性:action是需要多例创建模式的  所以需要将该属性配置为prototype
	 -->
	<bean name="userAction" class="com.xh.web.action.UserAction" scope="prototype"  >
		<property name="userService" ref="userService"></property>
	</bean>
	<bean name="baseDictAction" class="com.xh.web.action.BaseDictAction" scope="prototype" >
		<property name="bdService" ref="bdService"></property>
	</bean>
	<bean name="customerAction" class="com.xh.web.action.CustomerAction" scope="prototype">
		<property name="custService" ref="custService"></property>
	</bean>
	<bean name="linkManAction" class="com.xh.web.action.LinkManAction" >
		<property name="lkmService" ref="lkmService" ></property>
	</bean>
	<bean name="saleVisitAction" class="com.xh.web.action.SaleVisitAction" scope="prototype" >
		<property name="svService" ref="svService"></property>
	</bean>
	
	<!-- service配置 -->
	<bean name="userService" class="com.xh.service.impl.UserServiceImpl" >
		<property name="userDao" ref="userDao" ></property>
	</bean>
	<bean name="bdService" class="com.xh.service.impl.BaseDictServiceImpl" >
		<property name="bdDao" ref="bdDao"></property>
	</bean>
	<bean name="custService" class="com.xh.service.impl.CustomerServiceImpl" >
		<property name="custDao" ref="custDao"></property>
	</bean>
	<bean name="lkmService" class="com.xh.service.impl.LinkManServiceImpl" >
		<property name="lkmDao" ref="lkmDao"></property>
	</bean>
	<bean name="svService" class="com.xh.service.impl.SaleVisitServiceImpl" >
		<property name="svDao" ref="svDao"></property>
	</bean>
	
	<!-- dao配置 -->
	<bean name="userDao" class="com.xh.dao.impl.UserDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="bdDao" class="com.xh.dao.impl.BaseDictDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="custDao" class="com.xh.dao.impl.CustomerDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="lkmDao" class="com.xh.dao.impl.LinkManDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="svDao" class="com.xh.dao.impl.SaleVisitDaoImpl" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
</beans>